{"version":3,"sources":["components/BandAdd.js","components/BandList.js","App.js","index.js"],"names":["BandAdd","addBand","useState","bandName","setBandName","onSubmit","e","preventDefault","trim","length","className","placeholder","value","onChange","name","target","BandList","data","vote","deleteBand","changeName","bands","setBands","useEffect","map","band","onClick","id","console","log","event","newName","nameChanged","votes","App","io","transports","socket","online","setOnline","connect","on","emit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c63abc6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const BandAdd = ({ addBand }) => {\r\n\r\n    const [bandName, setBandName] = useState('')\r\n\r\n    return (\r\n        <>\r\n            <h3>Agregar Banda</h3>\r\n            <form\r\n                onSubmit={ ( e ) => {\r\n                    e.preventDefault()\r\n                    if ( bandName.trim().length > 0 ) {\r\n                        addBand( bandName )\r\n                        setBandName( '' )\r\n                    }\r\n                }}\r\n            >\r\n                <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nuevo nombre de banda\"\r\n                    value={ bandName }\r\n                    onChange={ ( e ) => {\r\n                        const name = e.target.value\r\n                        setBandName( name )\r\n                    }}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const BandList = ({ data, vote, deleteBand, changeName }) => {\r\n\r\n    const [bands, setBands] = useState(data)\r\n\r\n    useEffect(() => {\r\n        setBands( data )\r\n    }, [ data ])\r\n\r\n    const nameChanged = ( event, id ) => {\r\n        const newName = event.target.value\r\n        setBands( bands => bands.map( ( band ) => {\r\n            if ( band.id === id ) {\r\n                band.name = newName\r\n            }\r\n            return band\r\n        }))\r\n    }\r\n\r\n    const onLostFocus = ( id, name ) => {\r\n        console.log( id, name ) \r\n    }\r\n\r\n    const createRows = () => {\r\n        return (\r\n            bands.map( ( band ) => (\r\n                <tr key={ band.id }>\r\n                    <td>\r\n                        <button\r\n                            className=\"btn btn-dark\"\r\n                            onClick={ () => vote( band.id ) }\r\n                        >\r\n                            +1 \r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <form\r\n                            onSubmit={ ( e ) => {\r\n                                e.preventDefault()\r\n                                onLostFocus( band.id, band.name )\r\n                                changeName( band.id, band.name )\r\n                            }}\r\n                        >\r\n                            <input\r\n                                className=\"form-control\"\r\n                                value={ band.name }\r\n                                onChange={ ( event ) => nameChanged( event, band.id ) }\r\n                            />\r\n                        </form>\r\n                    </td>\r\n                    <td> <h3> { band.votes } </h3> </td>\r\n                    <td>\r\n                        <button\r\n                            className=\"btn btn-outline-danger\"\r\n                            onClick={ () => deleteBand( band.id ) }\r\n                        >\r\n                            Borrar\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Bandas Actuales</h3>\r\n            <table className=\"table table-stripped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Nombre</th>\r\n                        <th>Votos</th>\r\n                        <th>Borrar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { createRows() }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport { io } from 'socket.io-client'\n\nimport { BandAdd } from './components/BandAdd'\nimport { BandList } from './components/BandList'\n\n//--INIT SOCKET\nconst connectSocketServer = () => {\n  const socket = io( 'https://socket-bandname-server.herokuapp.com/', {\n    transports: [ 'websocket' ]\n  })\n  return socket\n}\n\nexport const App = () => {\n\n  const [ socket ] = useState( connectSocketServer() )\n  const [ online, setOnline ] = useState( false )\n  const [bands, setBands] = useState([])\n\n  //--CHECK INITIAL CONNECTION TO SOCKET\n  useEffect(() => {\n    setOnline( socket.connect() )\n  }, [ socket ])\n\n  //--CHECK CONNECTION TO SOCKET\n  useEffect(() => {\n    socket.on( 'connect', () => {\n      setOnline( true )\n    })\n  }, [ socket ])\n\n  //--CHECK DISCONNECTION TO SOCKET\n  useEffect(() => {\n    socket.on( 'disconnect', () => {\n      setOnline( false )\n    })\n  }, [ socket ])\n\n  //--CHECK MESSAGE current-band FORM SOCKET\n  useEffect(() => {\n    socket.on( 'current-band', ( bands ) => {\n      setBands( bands )\n    })\n  }, [ socket ])\n\n  const vote = ( id ) => {\n    socket.emit( 'vote-band', id )\n  }\n\n  const deleteBand = ( id ) => {\n    socket.emit( 'delete-band', id )\n  }\n\n  const changeName = ( id, name ) => {\n      socket.emit( 'change-band-name', {\n        id,\n        name\n      })\n  }\n\n  const addBand = ( name ) => {\n      socket.emit( 'add-new-band', {\n        name\n      })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"alert\">\n        <p>\n          Service status: {\n            online\n              ? <span className=\"text-success\"> Online</span>\n              : <span className=\"text-danger\"> Offline</span>\n          }\n        </p>\n      </div>\n\n      <h1>BandNames</h1>\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <BandList\n            data={ bands }\n            vote={ vote }\n            deleteBand={ deleteBand }\n            changeName={ changeName }\n          />\n        </div>\n        <div className=\"col-4\">\n          <BandAdd\n            addBand={ addBand }\n          />\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}